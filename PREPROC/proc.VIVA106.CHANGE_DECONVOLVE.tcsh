#!/bin/tcsh -xef

echo "auto-generated by afni_proc.py, Fri Mar  3 23:51:04 2017"
echo "(version 5.10, November 1, 2016)"
echo "execution started: `date`"

# execute via : 
#   tcsh -xef proc.VIVA106.CHANGE.tcsh |& tee output.proc.VIVA106.CHANGE.tcsh

# =========================== auto block: setup ============================
# script setup

# take note of the AFNI version
afni -ver

# check that the current AFNI version is recent enough
afni_history -check_date 23 Sep 2016
if ( $status ) then
    echo "** this script requires newer AFNI binaries (than 23 Sep 2016)"
    echo "   (consider: @update.afni.binaries -defaults)"
    exit
endif

# the user may specify a single subject to run with
if ( $#argv > 0 ) then
    set subj = $argv[1]
else
    set subj = VIVA106
endif

set output_dir = ~/DATA/VIVA/$subj/visit1/PROC.CHANGE

# set list of runs
set runs = (`count -digits 2 1 1`)

# copy stim files into stimulus directory
cp /media/DATA/VIVA/SCRIPTS/VIVA/PREPROC/timing_change/timing_GO_X.1D      \
   /media/DATA/VIVA/SCRIPTS/VIVA/PREPROC/timing_change/timing_GO_O.1D      \
    /media/DATA/VIVA/SCRIPTS/VIVA/PREPROC/timing_change/timing_CHANGE.1D \
    $output_dir/stimuli

# and make note of repetitions (TRs) per run
set tr_counts = ( 248 )


# -------------------------------------------------------
# enter the results directory (can begin processing data)
cd $output_dir


# ================================ regress =================================

rm motion_demean.1D motion_deriv.1D censor_${subj}_combined_2.1D
rm errts.$subj* fitts.$subj* stats.$subj*

# compute de-meaned motion parameters (for use in regression)
1d_tool.py -infile dfile_rall.1D -set_nruns 1                            \
           -demean -write motion_demean.1D

# compute motion parameter derivatives (just to have)
1d_tool.py -infile dfile_rall.1D -set_nruns 1                            \
           -derivative -demean -write motion_deriv.1D

# create censor file motion_${subj}_censor.1D, for censoring motion 
1d_tool.py -infile dfile_rall.1D -set_nruns 1                            \
    -show_censor_count -censor_prev_TR                                   \
    -censor_motion 0.9 motion_${subj}

# combine multiple censor files
1deval -a motion_${subj}_censor.1D -b outcount_${subj}_censor.1D         \
       -expr "a*b" > censor_${subj}_combined_2.1D

# note TRs that were not censored
set ktrs = `1d_tool.py -infile censor_${subj}_combined_2.1D              \
                       -show_trs_uncensored encoded`

# ------------------------------
# run the regression analysis
3dDeconvolve -input pb05.$subj.r*.scale+tlrc.HEAD                        \
    -censor censor_${subj}_combined_2.1D                                 \
    -polort 4                                                            \
    -local_times                                                         \
    -num_stimts 9                                                        \
    -stim_times 1 stimuli/timing_GO_X.1D 'BLOCK(1,1)'                    \
    -stim_label 1 goX                                                     \
    -stim_times 2 stimuli/timing_GO_O.1D 'BLOCK(1,1)' 			 \
    -stim_label 2 goO							 \
    -stim_times 3 stimuli/timing_CHANGE.1D 'BLOCK(1,1)'                  \
    -stim_label 3 change                                                 \
    -stim_file 4 motion_demean.1D'[0]' -stim_base 4 -stim_label 4 roll   \
    -stim_file 5 motion_demean.1D'[1]' -stim_base 5 -stim_label 5 pitch  \
    -stim_file 6 motion_demean.1D'[2]' -stim_base 6 -stim_label 6 yaw    \
    -stim_file 7 motion_demean.1D'[3]' -stim_base 7 -stim_label 7 dS     \
    -stim_file 8 motion_demean.1D'[4]' -stim_base 8 -stim_label 8 dL     \
    -stim_file 9 motion_demean.1D'[5]' -stim_base 9 -stim_label 9 dP     \
    -gltsym 'SYM: +goX -change'                                           \
    -glt_label 1 goX_vs_change                                            \
    -gltsym 'SYM: +goO -change'						 \
    -glt_label 2 goO_vs_change						 \
    -gltsym 'SYM: +goX -goO'						 \
    -glt_label 3 goX_vs_goO						 \
    -jobs 1                                                              \
    -fout -tout -x1D X.xmat.1D -xjpeg X.jpg                              \
    -x1D_uncensored X.nocensor.xmat.1D                                   \
    -fitts fitts.$subj                                                   \
    -errts errts.${subj}                                                 \
    -bucket stats.$subj


# if 3dDeconvolve fails, terminate the script
if ( $status != 0 ) then
    echo '---------------------------------------'
    echo '** 3dDeconvolve error, failing...'
    echo '   (consider the file 3dDeconvolve.err)'
    exit
endif



# return to parent directory
cd ..

echo "execution finished: `date`"



